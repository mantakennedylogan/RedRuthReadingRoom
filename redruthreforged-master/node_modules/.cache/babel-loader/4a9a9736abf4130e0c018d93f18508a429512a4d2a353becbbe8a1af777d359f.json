{"ast":null,"code":"var _jsxFileName = \"C:\\\\csSchoolWork\\\\RedRuthReadingRoom\\\\redruthreforged-master\\\\src\\\\Components\\\\Admin\\\\Buttons\\\\PublicListenButton.jsx\",\n  _s = $RefreshSig$();\nimport { Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport axios from '../../../API/axios';\n\n// This component returns a button for toggling between public and private LISTEN status of a collection.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicListenButton(props) {\n  _s();\n  const [isPublic, setIsPublic] = useState(props.public_flg === 1 ? true : false);\n\n  // Styling\n  const buttonStyleOpen = {\n    width: '100px',\n    backgroundColor: 'transparent',\n    color: '#0091ff',\n    boxShadow: 'inset 0px 0px 0px 2px #0091ff',\n    '&:hover': {\n      backgroundColor: 'transparent',\n      boxShadow: 'inset 0px 0px 2px 3px #0091ff'\n    }\n  };\n  const buttonStyleClosed = {\n    width: '100px',\n    backgroundColor: 'transparent',\n    color: '#545454',\n    boxShadow: 'inset 0px 0px 0px 2px #545454',\n    '&:hover': {\n      backgroundColor: 'transparent',\n      boxShadow: 'inset 0px 0px 2px 3px #545454'\n    }\n  };\n\n  // Helper function, makes request to the API to flip the public flag of the collection.\n  const togglePublic = e => {\n    e.preventDefault();\n    axios.get('/api/admin/update/collectionpubliclistenflg?collection_id=' + props.collection_id + '&public_listen_flg=' + isPublic).then(response => {\n      if (response) {\n        setIsPublic(!isPublic);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: e => togglePublic(e),\n    sx: isPublic ? buttonStyleOpen : buttonStyleClosed,\n    children: isPublic ? \"Published\" : \"Draft\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n_s(PublicListenButton, \"dM7U+9AKACeg7YnlURfKzrG0VQU=\");\n_c = PublicListenButton;\nexport default PublicListenButton;\nvar _c;\n$RefreshReg$(_c, \"PublicListenButton\");","map":{"version":3,"names":["Button","React","useState","axios","PublicListenButton","props","isPublic","setIsPublic","public_flg","buttonStyleOpen","width","backgroundColor","color","boxShadow","buttonStyleClosed","togglePublic","e","preventDefault","get","collection_id","then","response"],"sources":["C:/csSchoolWork/RedRuthReadingRoom/redruthreforged-master/src/Components/Admin/Buttons/PublicListenButton.jsx"],"sourcesContent":["import { Button } from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport axios from '../../../API/axios';\r\n\r\n// This component returns a button for toggling between public and private LISTEN status of a collection.\r\n\r\nfunction PublicListenButton(props) {\r\n\tconst [isPublic, setIsPublic] = useState(props.public_flg === 1 ? true : false);\r\n\r\n\t// Styling\r\n\tconst buttonStyleOpen = {\r\n\t\twidth: '100px',\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tcolor: '#0091ff',\r\n\t\tboxShadow: 'inset 0px 0px 0px 2px #0091ff',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'transparent',\r\n\t\t\tboxShadow: 'inset 0px 0px 2px 3px #0091ff'\r\n\t\t}\r\n\t}\r\n\r\n\tconst buttonStyleClosed = {\r\n\t\twidth: '100px',\r\n\t\tbackgroundColor: 'transparent',\r\n\t\tcolor: '#545454',\r\n\t\tboxShadow: 'inset 0px 0px 0px 2px #545454',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: 'transparent',\r\n\t\t\tboxShadow: 'inset 0px 0px 2px 3px #545454'\r\n\t\t}\r\n\t}\r\n\r\n\t// Helper function, makes request to the API to flip the public flag of the collection.\r\n\tconst togglePublic = (e) => {\r\n\t\te.preventDefault();\r\n\t\taxios.get('/api/admin/update/collectionpubliclistenflg?collection_id=' + props.collection_id + '&public_listen_flg=' + isPublic).then((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\tsetIsPublic(!isPublic)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button onClick={(e) => togglePublic(e)} sx={isPublic ? buttonStyleOpen : buttonStyleClosed}>{isPublic ? \"Published\" : \"Draft\"}</Button>\r\n\t)\r\n}\r\n\r\nexport default PublicListenButton"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AAAA;AAEA,SAASC,kBAAkB,CAACC,KAAK,EAAE;EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAACG,KAAK,CAACG,UAAU,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;;EAE/E;EACA,MAAMC,eAAe,GAAG;IACvBC,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE,aAAa;IAC9BC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,+BAA+B;IAC1C,SAAS,EAAE;MACVF,eAAe,EAAE,aAAa;MAC9BE,SAAS,EAAE;IACZ;EACD,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACzBJ,KAAK,EAAE,OAAO;IACdC,eAAe,EAAE,aAAa;IAC9BC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,+BAA+B;IAC1C,SAAS,EAAE;MACVF,eAAe,EAAE,aAAa;MAC9BE,SAAS,EAAE;IACZ;EACD,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClBd,KAAK,CAACe,GAAG,CAAC,4DAA4D,GAAGb,KAAK,CAACc,aAAa,GAAG,qBAAqB,GAAGb,QAAQ,CAAC,CAACc,IAAI,CAAEC,QAAQ,IAAK;MACnJ,IAAIA,QAAQ,EAAE;QACbd,WAAW,CAAC,CAACD,QAAQ,CAAC;MACvB;IACD,CAAC,CAAC;EACH,CAAC;EAED,oBACC,QAAC,MAAM;IAAC,OAAO,EAAGU,CAAC,IAAKD,YAAY,CAACC,CAAC,CAAE;IAAC,EAAE,EAAEV,QAAQ,GAAGG,eAAe,GAAGK,iBAAkB;IAAA,UAAER,QAAQ,GAAG,WAAW,GAAG;EAAO;IAAA;IAAA;IAAA;EAAA,QAAU;AAE1I;AAAC,GAvCQF,kBAAkB;AAAA,KAAlBA,kBAAkB;AAyC3B,eAAeA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}