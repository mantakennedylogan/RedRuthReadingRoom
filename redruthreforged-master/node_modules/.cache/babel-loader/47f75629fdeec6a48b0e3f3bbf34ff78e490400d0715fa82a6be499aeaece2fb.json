{"ast":null,"code":"var _jsxFileName = \"C:\\\\csSchoolWork\\\\RedRuthReadingRoom\\\\redruthreforged-master\\\\src\\\\Components\\\\Record\\\\RecordingBox\\\\AudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\n/*import AWS from 'aws-sdk'\r\nimport ReactS3 from 'react-s3';\r\n\r\nimport { ConfigurationServicePlaceholders } from \"aws-sdk/lib/config_service_placeholders\";\r\n*/\n\nimport axios from '../../../API/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mimeType = \"audio/webm\";\nconst AudioRecorder = () => {\n  _s();\n  const [permission, setPermission] = useState(false);\n  const mediaRecorder = useRef(null);\n  const [recordingStatus, setRecordingStatus] = useState(\"inactive\");\n  const [stream, setStream] = useState(null);\n  const [audio, setAudio] = useState(null);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const getMicrophonePermission = async () => {\n    if (\"MediaRecorder\" in window) {\n      try {\n        const mediaStream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false\n        });\n        setPermission(true);\n        setStream(mediaStream);\n      } catch (err) {\n        alert(err.message);\n      }\n    } else {\n      alert(\"The MediaRecorder API is not supported in your browser.\");\n    }\n  };\n  const startRecording = async () => {\n    setRecordingStatus(\"recording\");\n    const media = new MediaRecorder(stream, {\n      type: mimeType\n    });\n    mediaRecorder.current = media;\n    mediaRecorder.current.start();\n    let localAudioChunks = [];\n    mediaRecorder.current.ondataavailable = event => {\n      if (typeof event.data === \"undefined\") return;\n      if (event.data.size === 0) return;\n      localAudioChunks.push(event.data);\n    };\n    setAudioChunks(localAudioChunks);\n  };\n  const stopRecording = () => {\n    setRecordingStatus(\"inactive\");\n    mediaRecorder.current.stop();\n    mediaRecorder.current.onstop = () => {\n      const audioBlob = new Blob(audioChunks, {\n        type: mimeType\n      });\n      const audioUrl = URL.createObjectURL(audioBlob);\n      setAudio(audioUrl);\n      setAudioChunks([]);\n    };\n  };\n\n  // Function to upload file to s3\n  // const uploadFile = async () => {\n  // \t// S3 Bucket Name\n  // \tconst S3_BUCKET = \"redruth-bucket\";\n\n  // \t// S3 Region\n  // \tconst REGION = \"us-west-2\";\n\n  // \t// S3 Credentials\n  // \tAWS.config.update({\n  // \t  accessKeyId: \"AKIA2WTBG4K3GELKESGS\",\n  // \t  secretAccessKey: \"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\",\n  // \t});\n  // \tconst s3 = new AWS.S3({\n  // \t  params: { Bucket: S3_BUCKET },\n  // \t  region: REGION,\n  // \t});\n\n  // \t// Files Parameters\n\n  // \tconst params = {\n  // \t\tBucket: S3_BUCKET,\n  // \t\tKey: \"Se7en audio name\",\n  // \t\tBody: audio,\n  // \t  };\n\n  // \t  // Uploading file to s3\n\n  // \t  var upload = s3\n  // \t\t.putObject(params)\n  // \t\t.on(\"httpUploadProgress\", (evt) => {\n  // \t\t  // File uploading progress\n  // \t\t  console.log(\n  // \t\t\t\"Uploading \" + parseInt((evt.loaded * 100) / evt.total) + \"%\"\n  // \t\t  );\n  // \t\t})\n  // \t\t.promise();\n\n  // \t  await upload.then((err, data) => {\n  // \t\tconsole.log(err);\n  // \t\t// Fille successfully uploaded\n  // \t\talert(\"audio uploaded successfully.\");\n  // \t  });\n  // };\n\n  const config = {\n    bucketName: 'redruth-bucket',\n    region: 'us-west-2',\n    accessKeyId: 'AKIA2WTBG4K3GELKESGS',\n    secretAccessKey: 'LQNAcBUrON8jOshkRoYrAROnkhWbQgX4zuoSgL2Y+DEkgDxe6veFosBT7eUgEXAMPLE'\n  };\n  /*\r\n  \tfunction uploadFile(audio) {\r\n  \t\tReactS3.upload(audio, config)\r\n  \t\t.then(data => console.log(data))\r\n  \t\t.catch(err => console.error(err))\t\r\n  \t}\r\n  \t*/\n  function uploadFile(john) {\n    console.log(\"this is the payloat\" + john);\n    try {\n      axios.post('/api/upload', {\n        'audio': john\n      }).then(response => {\n        console.log(response);\n      });\n    } catch (e) {\n      console.log(\"Axios fail :(\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Audio Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls\",\n          children: [!permission ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getMicrophonePermission,\n            type: \"button\",\n            children: \"Get Microphone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 7\n          }, this) : null, permission && recordingStatus === \"inactive\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startRecording,\n            type: \"button\",\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this) : null, recordingStatus === \"recording\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stopRecording,\n            type: \"button\",\n            children: \"Stop Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"File Upload With \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"\\\"Node.js\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: uploadFile(audio),\n          enctype: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Select a file:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"file\",\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this), audio ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-player\",\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            src: audio,\n            controls: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            download: true,\n            href: audio,\n            children: \"Download Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: uploadFile(audio),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_s(AudioRecorder, \"gkw+jfU2sTTcgzoca0SGton0vxQ=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["useState","useRef","axios","mimeType","AudioRecorder","permission","setPermission","mediaRecorder","recordingStatus","setRecordingStatus","stream","setStream","audio","setAudio","audioChunks","setAudioChunks","getMicrophonePermission","window","mediaStream","navigator","mediaDevices","getUserMedia","video","err","alert","message","startRecording","media","MediaRecorder","type","current","start","localAudioChunks","ondataavailable","event","data","size","push","stopRecording","stop","onstop","audioBlob","Blob","audioUrl","URL","createObjectURL","config","bucketName","region","accessKeyId","secretAccessKey","uploadFile","john","console","log","post","then","response","e"],"sources":["C:/csSchoolWork/RedRuthReadingRoom/redruthreforged-master/src/Components/Record/RecordingBox/AudioRecorder.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\r\n/*import AWS from 'aws-sdk'\r\nimport ReactS3 from 'react-s3';\r\n\r\nimport { ConfigurationServicePlaceholders } from \"aws-sdk/lib/config_service_placeholders\";\r\n*/\r\n\r\nimport axios from '../../../API/axios';\r\nconst mimeType = \"audio/webm\";\r\n\r\nconst AudioRecorder = () => {\r\n\tconst [permission, setPermission] = useState(false);\r\n\tconst mediaRecorder = useRef(null);\r\n\tconst [recordingStatus, setRecordingStatus] = useState(\"inactive\");\r\n\tconst [stream, setStream] = useState(null);\r\n\tconst [audio, setAudio] = useState(null);\r\n\tconst [audioChunks, setAudioChunks] = useState([]);\r\n\r\n\tconst getMicrophonePermission = async () => {\r\n\t\tif (\"MediaRecorder\" in window) {\r\n\t\t\ttry {\r\n\t\t\t\tconst mediaStream = await navigator.mediaDevices.getUserMedia({\r\n\t\t\t\t\taudio: true,\r\n\t\t\t\t\tvideo: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetPermission(true);\r\n\t\t\t\tsetStream(mediaStream);\r\n\t\t\t} catch (err) {\r\n\t\t\t\talert(err.message);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert(\"The MediaRecorder API is not supported in your browser.\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst startRecording = async () => {\r\n\t\tsetRecordingStatus(\"recording\");\r\n\t\tconst media = new MediaRecorder(stream, { type: mimeType });\r\n\r\n\t\tmediaRecorder.current = media;\r\n\r\n\t\tmediaRecorder.current.start();\r\n\r\n\t\tlet localAudioChunks = [];\r\n\r\n\t\tmediaRecorder.current.ondataavailable = (event) => {\r\n\t\t\tif (typeof event.data === \"undefined\") return;\r\n\t\t\tif (event.data.size === 0) return;\r\n\t\t\tlocalAudioChunks.push(event.data);\r\n\t\t};\r\n\r\n\t\tsetAudioChunks(localAudioChunks);\r\n\t};\r\n\r\n\tconst stopRecording = () => {\r\n\t\tsetRecordingStatus(\"inactive\");\r\n\t\tmediaRecorder.current.stop();\r\n\r\n\t\tmediaRecorder.current.onstop = () => {\r\n\t\t\tconst audioBlob = new Blob(audioChunks, { type: mimeType });\r\n\t\t\tconst audioUrl = URL.createObjectURL(audioBlob);\r\n\r\n\t\t\tsetAudio(audioUrl);\r\n\r\n\t\t\tsetAudioChunks([]);\r\n\t\t};\r\n\t};\r\n\r\n\t// Function to upload file to s3\r\n\t// const uploadFile = async () => {\r\n\t// \t// S3 Bucket Name\r\n\t// \tconst S3_BUCKET = \"redruth-bucket\";\r\n\t\r\n\t// \t// S3 Region\r\n\t// \tconst REGION = \"us-west-2\";\r\n\t\r\n\t// \t// S3 Credentials\r\n\t// \tAWS.config.update({\r\n\t// \t  accessKeyId: \"AKIA2WTBG4K3GELKESGS\",\r\n\t// \t  secretAccessKey: \"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\",\r\n\t// \t});\r\n\t// \tconst s3 = new AWS.S3({\r\n\t// \t  params: { Bucket: S3_BUCKET },\r\n\t// \t  region: REGION,\r\n\t// \t});\r\n\r\n\t// \t// Files Parameters\r\n\r\n\t// \tconst params = {\r\n\t// \t\tBucket: S3_BUCKET,\r\n\t// \t\tKey: \"Se7en audio name\",\r\n\t// \t\tBody: audio,\r\n\t// \t  };\r\n\t  \r\n\t// \t  // Uploading file to s3\r\n\t  \r\n\t// \t  var upload = s3\r\n\t// \t\t.putObject(params)\r\n\t// \t\t.on(\"httpUploadProgress\", (evt) => {\r\n\t// \t\t  // File uploading progress\r\n\t// \t\t  console.log(\r\n\t// \t\t\t\"Uploading \" + parseInt((evt.loaded * 100) / evt.total) + \"%\"\r\n\t// \t\t  );\r\n\t// \t\t})\r\n\t// \t\t.promise();\r\n\t  \r\n\t// \t  await upload.then((err, data) => {\r\n\t// \t\tconsole.log(err);\r\n\t// \t\t// Fille successfully uploaded\r\n\t// \t\talert(\"audio uploaded successfully.\");\r\n\t// \t  });\r\n\t// };\r\n\r\n\tconst config = {\r\n\t\tbucketName: 'redruth-bucket',\r\n\t\tregion: 'us-west-2',\r\n\t\taccessKeyId: 'AKIA2WTBG4K3GELKESGS',\r\n\t\tsecretAccessKey: 'LQNAcBUrON8jOshkRoYrAROnkhWbQgX4zuoSgL2Y+DEkgDxe6veFosBT7eUgEXAMPLE',\r\n\t}\r\n/*\r\n\tfunction uploadFile(audio) {\r\n\t\tReactS3.upload(audio, config)\r\n\t\t.then(data => console.log(data))\r\n\t\t.catch(err => console.error(err))\t\r\n\t}\r\n\t*/\r\n\tfunction uploadFile(john){\r\n\t\tconsole.log(\"this is the payloat\" + john);\r\n\r\n\t\ttry{\r\n\t\t\taxios.post('/api/upload',{'audio':john}).then((response)=>{\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t});\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\tconsole.log(\"Axios fail :(\");\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\t\t\r\n\r\n\t\t<div>\r\n\t\t\t<h2>Audio Recorder</h2>\r\n\t\t\t<main>\r\n\t\t\t\t<div className=\"audio-controls\">\r\n\t\t\t\t\t{!permission ? (\r\n\t\t\t\t\t\t<button onClick={getMicrophonePermission} type=\"button\">\r\n\t\t\t\t\t\t\tGet Microphone\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{permission && recordingStatus === \"inactive\" ? (\r\n\t\t\t\t\t\t<button onClick={startRecording} type=\"button\">\r\n\t\t\t\t\t\t\tStart Recording\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{recordingStatus === \"recording\" ? (\r\n\t\t\t\t\t\t<button onClick={stopRecording} type=\"button\">\r\n\t\t\t\t\t\t\tStop Recording\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\r\n\r\n\t\t\t\t<h2>File Upload With <code>\"Node.js\"</code></h2>\r\n\t\t\t\t\t<form action={uploadFile(audio)} enctype=\"multipart/form-data\">\r\n\t\t\t\t\t<div>Select a file: \r\n\t\t\t\t\t\t<input name=\"file\" type=\"file\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Upload\" />\r\n\t\t\t\t\t</form>\r\n\t\t\r\n\t\t\r\n\t\t\t\t{audio ? (\r\n\t\t\t\t\t<div className=\"audio-player\">\r\n\t\t\t\t\t\t<audio src={audio} controls></audio>\r\n\t\t\t\t\t\t<a download href={audio}>\r\n\t\t\t\t\t\t\tDownload Recording\r\n\t\t\t\t\t\t</a>\r\n\r\n        \t\t\t\t<button onClick={uploadFile(audio)}>Upload</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AudioRecorder;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}